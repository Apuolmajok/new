import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:sharecare/constants/constants.dart';
import 'package:sharecare/models/donee.dart';
import 'package:sharecare/views/vendor/vendor_admin.dart';


class VendorRegistrationForm extends StatefulWidget {
  const VendorRegistrationForm({super.key});

  @override
  _VendorRegistrationFormState createState() => _VendorRegistrationFormState();
}

class _VendorRegistrationFormState extends State<VendorRegistrationForm> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _timeController = TextEditingController();
  final TextEditingController _imageUrlController = TextEditingController();
  final TextEditingController _ownerController = TextEditingController();
  final TextEditingController _codeController = TextEditingController();
  final TextEditingController _logoUrlController = TextEditingController();
  final TextEditingController _ratingController = TextEditingController();
  final TextEditingController _ratingCountController = TextEditingController();
  final TextEditingController _verificationController = TextEditingController();
  final TextEditingController _verificationMessageController = TextEditingController();
  final TextEditingController _coordsController = TextEditingController(); 
  // Assuming this is a JSON string

  bool _pickup = true;
  bool _delivery = true;
  bool _isAvailable = true;
  final bool _isApproved = false;

  Future<void> _submitForm() async {
    if (_formKey.currentState!.validate()) {
      final coordsMap = jsonDecode(_coordsController.text) as Map<String, dynamic>;
      final coords = Coords.fromMap(coordsMap);

      final vendor = Vendor(
        vendorId: '', // This will be generated by Firestore
        title: _titleController.text,
        time: _timeController.text,
        imageUrl: _imageUrlController.text,
        pickup: _pickup,
        delivery: _delivery,
        isAvailable: _isAvailable,
        owner: _ownerController.text,
        code: _codeController.text,
        logoUrl: _logoUrlController.text,
        rating: int.parse(_ratingController.text),
        ratingCount: _ratingCountController.text,
        verification: _verificationController.text,
        verificationMessage: _verificationMessageController.text,
        coords: coords,
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
        isApproved: _isApproved,
      );

      final docRef = await FirebaseFirestore.instance.collection('vendors').add(vendor.toMap());

      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Vendor registered successfully!')),
      );

      _formKey.currentState!.reset();

      // Navigate to the Vendor Admin Dashboard
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => VendorAdminDashboard(vendorId: docRef.id),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Register Your Business'),
        backgroundColor: kPrimary,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              _buildTextField(_titleController, 'Business Title', 'Enter business title'),
              _buildTextField(_timeController, 'Business Time', 'Enter business time'),
              _buildTextField(_imageUrlController, 'Image URL', 'Enter image URL'),
              _buildTextField(_ownerController, 'Owner Name', 'Enter owner name'),
              _buildTextField(_codeController, 'Business Code', 'Enter business code'),
              _buildTextField(_logoUrlController, 'Logo URL', 'Enter logo URL'),
              _buildTextField(_ratingController, 'Rating', 'Enter rating', keyboardType: TextInputType.number),
              _buildTextField(_ratingCountController, 'Rating Count', 'Enter rating count'),
              _buildTextField(_verificationController, 'Verification Status', 'Enter verification status'),
              _buildTextField(_verificationMessageController, 'Verification Message', 'Enter verification message'),
              _buildTextField(_coordsController, 'Coordinates (JSON)', 'Enter coordinates as JSON string'),
              _buildCheckbox('Pickup', _pickup, (value) {
                setState(() {
                  _pickup = value!;
                });
              }),
              _buildCheckbox('Delivery', _delivery, (value) {
                setState(() {
                  _delivery = value!;
                });
              }),
              _buildCheckbox('Available', _isAvailable, (value) {
                setState(() {
                  _isAvailable = value!;
                });
              }),
              ElevatedButton(
                onPressed: _submitForm,
                child: const Text('Submit'),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String label, String hint, {TextInputType keyboardType = TextInputType.text}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextFormField(
        controller: controller,
        decoration: InputDecoration(
          labelText: label,
          hintText: hint,
          border: const OutlineInputBorder(),
        ),
        keyboardType: keyboardType,
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Please enter $label';
          }
          return null;
        },
      ),
    );
  }

  Widget _buildCheckbox(String label, bool value, Function(bool?) onChanged) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: CheckboxListTile(
        title: Text(label),
        value: value,
        onChanged: onChanged,
      ),
    );
  }
}
